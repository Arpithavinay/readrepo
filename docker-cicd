pipeline {
    agent any
    tools
        {
        maven "maven3"
        }

    stages {
        stage('checkout') 
        {
                steps {

                    git branch: 'master', url: 'https://github.com/devops4solutions/CI-CD-using-Docker.git'            
                     }
        }

        stage('Execute Maven') 
        {
                steps {
                        sh 'mvn package'             
                      }
        }
        stage('Docker Build and Tag') 
        {
                steps {

 

                    sh 'docker build -t webapplication:latest .'
                    //sh 'docker tag webapplication:latest gowthampatil/dockercicd:latest'
                    sh 'docker tag webapplication:latest arpitha17/dockercicd:$BUILD_NUMBER'
                }
        }
        stage('Publish image to Docker Hub') 
        {
                steps {
                        withDockerRegistry([ credentialsId: "cd28cd70-f6c7-47b8-9bdd-35eb5c1c3ca2", url: "https://index.docker.io/v1/" ])
                        {
                        //sh  'docker push gowthampatil/dockercicd:latest'
                          sh  'docker push arpitha17/dockercicd:$BUILD_NUMBER'
                        }        
                      }
        }

 

stage('Stop Container by Port') 
       {
            steps {
                script {
                    // Define the port number of the container you want to stop
                    def targetPort = '8008' // Replace with your port number

 

                    // Use the docker ps command to list running containers
                    def containerInfo = sh(script: "docker ps --filter publish=$targetPort --format {{.ID}}", returnStdout: true).trim()

 

                    if (containerInfo) {
                        // Stop the container using its ID
                        sh "docker stop $containerInfo"
                        sh "docker rm $containerInfo "
                    } else {
                        echo "No container found running on port $targetPort"
                    }
                }
            }
        }    

 

        stage('Run Docker container on Jenkins Agent')
        {
                steps {
                        sh "docker run -d -p 8008:8080 arpitha17/dockercicd:$BUILD_NUMBER"
                      }
        }

                //stage('Run Docker container on remote hosts') {
    //steps {
      //  sh "docker -H ssh://jenkins@3.110.31.175 run -d -p 8083:8080 ranganath09/dockercicd"
        //  }
       //}

 

           }
}
